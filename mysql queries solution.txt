Queries

======================================================================================================================================
1. List all the columns of the Salespeople table.

--->>mysql> describe salespeople;
======================================================================================================================================
2. List all customers with a rating of 100.

--->>mysql> select * from customer where rating=100;
======================================================================================================================================
3. Find all records in the Customer table with NULL values in the city column.
 
--->>mysql> select * from customer where city='null';
=======================================================================================================================================
4. Find the largest order taken by each salesperson on each date.

--->>mysql> select  a.snum, a.sname, c.odate, max(c.amt) from salespeople a, customer b, orders c where a.snum=b.snum and b.cnum=c.cnum group by a.snum, a.sname, c.odate;
==========================================================================================================================================================================
5. Arrange the Orders table by descending customer number.

--->>select * from orders order by cnum desc;
========================================================================================================================================
6. Find which salespeople currently have orders in the Orders table.

--->>select c.onum,c.odate,c.amt,a.sname from  salespeople a,customer b, orders c where  a.snum=b.snum and b.cnum=c.cnum group by a.sname,c.onum;

--->>select c.onum,c.odate,c.amt,a.sname from  salespeople a,customer b, orders c where  a.snum=b.snum and b.cnum=c.cnum group by a.sname;
==================================================================================================================================================
7. List names of all customers matched with the salespeople serving them.

--->>mysql> select a.sname,b.cname from salespeople a, customer b where a.snum=b.snum;
==========================================================================================================================================================
8. Find the names and numbers of all salespeople who had more than one customer.

--->>mysql> select a.sname,a.snum,count(b.snum) as "total number of orders" from salespeople a, customer b where a.snum=b.snum  group by a.snum ;
==========================================================================================================================================================
9. Count the orders of each of the salespeople and output the results in descending order. 

--->>mysql> select a.snum, a.sname, count(a.snum) as 'Number of Orders' from salespeople a, customer b, orders c where a.snum=b.snum and b.cnum=c.cnum group by a.snum order by 'number of orders' desc;
===========================================================================================================================================================================================================
10. List the Customer table if and only if one or more of the customers in the Customer table are located in San Jose.

--->>select * from customer  where exists (Select city from  customer  having city="san jose");
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
11. Match salespeople to customers according to what city they lived in.
--->>mysql> select a.sname,b.cname,a.city,b.city from salespeople a,customer b where a.snum=b.snum and a.city=b.city;
===========================================================================================================================================================
12. Find the largest order taken by each salesperson.

--->>mysql> select a.snum,a.sname,Max(c.amt) from salespeople a,customer b,orders c where a.snum=b.snum and b.cnum=c.cnum group by a.snum order by Max(c.amt) desc;
===============================================================================================================================================================================
13. Find customers in San Jose who have a rating above 200.

--->>select * from customer where rating>=200 and city="san jose";
==================================================================================================================================================================================
14. List the names and commissions of all salespeople in London.

--->> select sname,comm from salespeople where city="London";
================================================================================================================================================================================
15. List all the orders of salesperson Motika from the Orders table. 

--->> select a.sname,c.onum from salespeople a,customer b,orders c where a.snum=b.snum and b.cnum=c.cnum and a.sname="Motika";
=======================================================================================================================================================================================
16. Find all customers with orders on October 3.

-->>select a.cname,b.odate from customer a, orders b where b.odate='1996/10/03' group by a.cname; 
======================================================================================================================================================================================
17. Give the sums of the amounts from the Orders table, grouped by date, eliminating all those dates where the SUM was above the MAX amount.

--->>select odate,sum(amt) as total from orders group by odate having total > (select max(amt) from orders);
=====================================================================================================================================================================
18. Select all orders that had amounts that were greater than at least one of the orders from October 6.

--->>select * from orders where amt>(select min(amt) from orders where odate='1996/10/06' );
====================================================================================================================================================================
19. Write a query that uses the EXISTS operator to extract all salespeople who have customers with a rating of 300. 

--->>select a.sname,b.rating from salespeople a,customer b where exists (Select * from salespeople a, customer b having a.snum=b.snum and b.rating>=300);
=====================================================================================================================================================================
20. Find all pairs of customers having the same rating. 

--->> select a.cname,b.cname,a.rating from customer a,customer b where a.rating=b.rating and a.cname>b.cname;
==================================================================================================================================================================
21. Find all customers whose CNUM is 1000 above the SNUM of Serres. 

--->>mysql> select b.cname from salespeople a,customer b where b.cnum>2002 group by b.cname;
==================================================================================================================================================================
22. Give the salespeople’s commissions as percentages instead of decimal numbers.

--->>select comm*100 as 'comm %' from salespeople;
==================================================================================================================================================================
23. Find the largest order taken by each salesperson on each date, eliminating those MAX orders which are less than $3000.00 in value.

--->>select a.sname,c.amt,c.odate from salespeople a,customer b,orders c where a.snum=b.snum and b.cnum=c.cnum  and c.amt>3000;

--->>select a.snum, a.sname, c.odate, max(c.amt) as 'largestorder' from salespeople a, customer b, orders c where a.snum=b.snum and b.cnum=c.cnum group by a.snum,a.sname,c.odate having largestorder>3000;
==============================================================================================================================================================================================================
24. List the largest orders for October 3, for each salesperson.

--->>select  a.sname, c.odate, max(c.amt) as 'largestorder' from salespeople a, customer b, orders c where a.snum=b.snum and b.cnum=c.cnum and c.odate='1996/10/03' group by a.sname,c.odate having largestorder;
=====================================================================================================================================================================================================================
25. Find all customers located in cities where Serres (SNUM 1002) has customers.

--->> select b.cname,b.city from customer b where b.city='San Jose' or 'Berlin' and b.snum!=1002;
===================================================================================================================================================================
26. Select all customers with a rating above 200.00.

--->>select cname,rating from customer having rating>200;
==================================================================================================================================================================
27. Count the number of salespeople currently listing orders in the Orders table.

--->>select a.snum,a.sname,c.onum,c.amt from salespeople a,orders c,customer b where a.snum=b.snum and b.cnum=c.cnum group by a.snum;
=================================================================================================================================================================
28. Write a query that produces all customers serviced by salespeople with a commission above 12%.Output the customer’s name and the salesperson’s rate of commission.

--->>select a.sname,b.cname,a.comm from salespeople a,customer b where a.snum=b.snum and a.comm*100>=12 group by a.sname ;
==========================================================================================================================================================================	
29. Find salespeople who have multiple customers. 

--->>select snum,sname,count(*) from salespeople a,customer b where a.snum = b.snum group by snum having count(*)>1;
===========================================================================================================================================================================
30. Find salespeople with customers located in their city.

--->>select a.sname,b.cname,a.city as 'city' from salespeople a, customer b where a.snum=b.snum and a.city=b.city group by b.cname;
==========================================================================================================================================================================
31. Find all salespeople whose name starts with ‘P’ and the fourth character is ‘l’.

--->>select sname from salespeople where sname like 'P__l%';
==========================================================================================================================================================================
32. Write a query that uses a subquery to obtain all orders for the customer named Cisneros. Assume you do not know his customer number.

--->>select * from orders where cnum = (select cnum from customers where cname="cisneros");
===========================================================================================================================================================================================
33. Find the largest orders for Serres and Rifkin. 

--->>select a.sname,max(c.amt) as 'largest orders' from salespeople a,customer b,orders c where a.snum=b.snum and b.cnum=c.cnum and a.sname='Serres' or a.sname='rifkin' group by a.sname;
============================================================================================================================================================================================
34. Extract the Salespeople table in the following order : SNUM, SNAME, COMMISSION, CITY.

--->>select snum,sname,comm,city from salespeople;
===============================================================================================================================================================================================
35. Select all customers whose names fall in between ‘A’ and ‘G’ alphabetical range. 

--->>select * from customer where substring(cname,1,1) between "A" and "G";
================================================================================================================================================================================================
36. Select all the possible combinations of customers that you can assign. 

--->Incomplete question.
================================================================================================================================================================================================
37. Select all orders that are greater than the average for October 4. 

--->>select * from orders where amt > (select avg(amt) from orders where odate='1996/10/04');
================================================================================================================================================================================================
***38. Write a select command using a corelated subquery that selects the names and numbers of all customers with ratings equal to the maximum for their city.

--->>select cnum,cname,rating from customer where rating>=(select max(rating) from customer); 
====================================================================================================================================================================================================
39. Write a query that totals the orders for each day and places the results in descending order.

--->>select odate,sum(amt) as total from orders group by odate order by total desc ;
===============================================================================================================================================================
40. Write a select command that produces the rating followed by the name of each customer in San Jose.

--->>select rating,cname,city from customer where city="San Jose";
==============================================================================================================================================================================
41. Find all orders with amounts smaller than any amount for a customer in San Jose.

--->>select c.amt,b.city from orders c,customer b where b.cnum=c.cnum and c.amt < Any(select max(c.amt) from orders c,customer b where b.cnum=c.cnum and b.city='san jose') group by c.amt;
=====================================================================================================================================================================================================
42. Find all orders with above average amounts for their customers. 

--->>select c.onum,b.cname from orders c, customer b where b.cnum=c.cnum and c.amt > Any(Select avg(c.amt) from orders c group by b.cname);
==================================================================================================================================================================================================
43. Write a query that selects the highest rating in each city.

--->>select city,max(rating) from customer group by city;
============================================================================================================================================================================================================
44. Write a query that calculates the amount of the salesperson’s commission on each order by a customer with a rating above 100.00.

--->>select a.sname, a.comm, c.amt, b.rating,(a.comm*c.amt) as total from salespeople a, customer b, orders c where a.snum=b.snum and b.cnum=c.cnum and rating>100 group by a.sname;
=============================================================================================================================================================================================================
45. Count the customers with ratings above San Jose’s average.

-->>select count(rating) from customer where rating > (Select avg(rating) from customer where city="San Jose");
======================================================================================================================================================================================================================
***46. Write a query that produces all pairs of salespeople with themselves as well as duplicate rows with the order reversed. 

--->>
===================================================================================================================================================================================================================
47. Find all salespeople that are located in either Barcelona or London. 

--->>select sname, city from salespeople where city="london" or city="barcelona" order by sname;
===============================================================================================================================================================================================================================
48. Find all salespeople with only one customer. 

--->>select a.sname, count(b.cname)  from salespeople a, customer b where a.snum=b.snum group by a.sname having count(b.cname)=1;
=================================================================================================================================================================================================================
49. Write a query that joins the Customer table to itself to find all pairs of customers served by a single salesperson. 

--->>select a.cnum, a.cname, b.cname, c.sname  from customer a,customer b,salespeople c where a.snum=c.snum and b.snum=c.snum and a.cname<>b.cname group by c.sname;
============================================================================================================================================================================================================
50. Write a query that will give you all orders for more than $1000.00

--->>select * from orders where amt>1000.00 group by amt asc;
===========================================================================================================================================================================================================
51. Write a query that lists each order number followed by the name of the customer who made that order.

--->>select c.onum,b.cname from customer b, orders c where b.cnum=c.cnum group by c.onum;
============================================================================================================================================================================================================
52. Write 2 queries that select all salespeople (by name and number) who have customers in their cities who they do not service, one using a join and one a corelated subquery. Which solution is more elegant?

--->>Select distinct cname from customer a, salespeople b where a.city = b.city and a.snum != b.snum; 
===================================================================================================================================================================================================================
53. Write a query that selects all customers whose ratings are equal to or greater than ANY (in the SQL sense) of Serres’? 

--->>SELECT b.cname,b.rating FROM SALESPEOPLE A,CUSTOMER B WHERE A.SNUM=B.SNUM and b.rating>= any(select rating from customer where sname like 'serres');
===========================================================================================================================================================================================================================================================
54. Write 2 queries that will produce all orders taken on October 3 or October 4. 

--->> SELECT onum,odate from orders  WHERE Date(odate) in ('1996/10/03','1996/10/04');
=====================================================================================================================================================================================================================================================================
55. Write a query that produces all pairs of orders by a given customer. Name that customer and eliminate duplicates.

--->>select distinct a.cname,b.onum from customer a,orders b where a.cnum = b.cnum and a.cname="Clemens";
=================================================================================================================================================================================================================
56. Find only those customers whose ratings are higher than every customer in Rome.

--->>SELECT cname,rating from CUSTOMER  WHERE  rating> all(select rating from customer where city like 'rome');
==================================================================================================================================================================================================================
57. Write a query on the Customers table whose output will exclude all customers with a rating <= 100.00, unless they are located in Rome.

--->>SELECT cname,rating,city from CUSTOMER  WHERE rating>100 or city="rome";
==================================================================================================================================================================================================================
58. Find all rows from the Customers table for which the salesperson number is 1001.

--->> select * from customer where snum=1001;
===================================================================================================================================================================================================================
59. Find the total amount in Orders for each salesperson for whom this total is greater than the amount of the largest order in the table.

--->>select sum(c.amt) as total,a.sname,max(c.amt) from orders c,salespeople a,customer b where a.snum=b.snum and b.cnum=c.cnum  group by a.sname having total > (select max(amt) from orders);
======================================================================================================================================================================================================================
60. Write a query that selects all orders save those with zeroes or NULLs in the amount field.


--->>select * from orders where amt = 0.00 and amt is null;
Empty set (0.00 sec)

--->>select onum,amt from orders where amt in('0','null'); 
=============================================================================================================================================================================================================
61. Produce all combinations of salespeople and customer names such that the former precedes the latter alphabetically, and the latter has a rating of less than 200.

--->> select * from customer a,salespeople b where a.snum = b.snum and sname<cname and rating<200.00;
==================================================================================================================================================================================================================
62. List all Salespeople’s names and the Commission they have earned. 

--->>select a.sname,sum(c.amt) as 'commission earned' from salespeople a,customer b, orders c where a.snum=b.snum and b.cnum=c.cnum group by a.sname;
===================================================================================================================================================================================================================
63. Write a query that produces the names and cities of all customers with the same rating as Hoffman. Write the query using Hoffman’s CNUM rather than his rating, so that it would still be usable if his rating changed.

--->> select cname,city from customer where rating > (Select rating from customer where cnum=2001) ;
==============================================================================================================================================================================================================================
64. Find all salespeople for whom there are customers that follow them in alphabetical order. 

--->>select a.sname,b.cname from customer b,salespeople a where a.snum = b.snum and a.sname<b.cname;
==============================================================================================================================================================================================================================
65. Write a query that produces the names and ratings of all customers of all who have above average orders.

--->>select b.cname,b.rating from salespeople a,customer b, orders c where a.snum=b.snum and b.cnum=c.cnum group by b.cname having c.amt > (Select avg(amt) from orders);
===============================================================================================================================================================================================================================
66. Find the SUM of all purchases from the Orders table.

--->> select sum(amt) from orders;
===============================================================================================================================================================================================================================
67. Write a SELECT command that produces the order number, amount and date for all rows in the order table.

--->>select onum,amt,odate from orders;
================================================================================================================================================================================================================================
68. Count the number of nonNULL rating fields in the Customers table (including repeats).

--->> select count(rating) from customer where rating not like 'null';
=================================================================================================================================================================================================================================
69. Write a query that gives the names of both the salesperson and the customer for each order after the order number.

--->> select a.sname,b.cname,c.onum from salespeople a, customer b, orders c where a.snum=b.snum and c.cnum=b.cnum;
==================================================================================================================================================================================================================================
70. List the commissions of all salespeople servicing customers in London.

--->>select a.sname,b.city,sum(a.comm*c.amt) as 'sale comm' from salespeople a, customer b, orders c where a.snum=b.snum and b.cnum=c.cnum and b.city='London' group by a.sname;
==================================================================================================================================================================================================================================
***71. Write a query using ANY or ALL that will find all salespeople who have no customers located in their city. 

--->>**
select a.sname,a.city,b.city from customer b,salespeople a where a.snum=b.snum;
========================================================================================================================================================================================================================
***72. Write a query using the EXISTS operator that selects all salespeople with customers located in their cities who are not assigned to them.

--->>
========================================================================================================================================================================================================================
73. Write a query that selects all customers serviced by Peel or Motika. (Hint : The SNUM field relates the two tables to one another.)

--->>select a.sname,b.cname from customer b,salespeople a where a.snum=b.snum and a.sname in("peel", "motika");
=========================================================================================================================================================================================================================
74. Count the number of salespeople registering orders for each day.(If a salesperson has more than one order on a given day, he or she should be counted only once.) 

--->>select count( distinct a.sname) as 'salespeople registering orders',c.odate from salespeople a, customer b, orders c where a.snum=b.snum and b.cnum=c.cnum group by odate;
============================================================================================================================================================================================================================
75. Find all orders attributed to salespeople in London.

--->>select a.sname,c.onum from salespeople a, customer b, orders c where a.snum=b.snum and b.cnum=c.cnum and a.city='London' group by c.onum;
================================================================================================================================================================
76. Find all orders by customers not located in the same cities as their salespeople.

--->>select a.sname,b.cname from salespeople a, customer b where a.snum=b.snum and a.city<>b.city;
==============================================================================================================================================================
77. Find all salespeople who have customers with more than one current order.

--->>select a.sname,count(a.snum) as ordercount from salespeople a, customer b, orders c where a.snum=b.snum and b.cnum=c.cnum  group by a.sname having ordercount>1;	
=============================================================================================================================================================================
***78. Write a query that extracts from the Customers table every customer assigned to a salesperson who currently has at least one other customer (besides the customer being selected) with orders in the Orders table.

--->>
=========================================================================================================================================================================================================================
79. Write a query that selects all customers whose names begin with ‘C’.

--->>select cname from customer where cname like 'C%';
==========================================================================================================================================================================================
80. Write a query on the Customers table that will find the highest rating in each city. Put the output in this form : for the city (city) the highest rating is : (rating).

--->>select city as 'for the city:',max(rating) as 'The highest rating is:' from customer group by city;
===========================================================================================================================================================================================
81. Write a query that will produce the SNUM values of all salespeople with orders currently in the Orders table (without any repeats).

--->> select a.snum,count(c.onum) as 'orders for the salesperson' from salespeople a, customer b, orders c where a.snum=b.snum and b.cnum=c.cnum group by a.snum;
===========================================================================================================================================================================================
82. Write a query that lists customers in descending order of rating. Output the rating field first, followed by the customer’s names and numbers.

--->>select rating,cname,cnum from customer order by rating desc;
===========================================================================================================================================================================================
83. Find the average commission for salespeople in London.

--->>select avg(comm) as 'avg comm in London' from salespeople where city='london';
============================================================================================================================================================================================
84. Find all orders credited to the same salesperson who services Hoffman (CNUM 2001).

--->>select c.onum from salespeople a, customer b, orders c where a.snum=b.snum and c.cnum=b.cnum and a.snum = (Select a.snum from salespeople a,customer b where a.snum=b.snum and b.cname='Hoffman');
===============================================================================================================================================================================================================
85. Find all salespeople whose commission is in between 0.10 and 0.12 (both inclusive).

--->> select sname from salespeople where comm between 0.10 and 0.12;
===============================================================================================================================================================================================================
86. Write a query that will give you the names and cities of all salespeople in London with a commission above 0.10.

--->> select sname,city from salespeople where city='london' and comm>0.10;
===============================================================================================================================================================================================================
87. What will be the output from the following query? SELECT * FROM ORDERS where (amt < 1000 OR NOT (odate = 10/03/1996 AND cnum > 2003));

--->>output:
+------+---------+------------+------+
| onum | amt     | odate      | cnum |
+------+---------+------------+------+
| 3001 |   18.69 | 1996-10-03 | 2008 |
| 3002 | 1900.10 | 1996-10-03 | 2007 |
| 3003 |  767.19 | 1996-10-03 | 2001 |
| 3005 | 5160.45 | 1996-10-03 | 2003 |
| 3006 | 1098.16 | 1996-10-03 | 2008 |
| 3007 |   75.75 | 1996-10-04 | 2002 |
| 3008 | 4723.00 | 1996-10-05 | 2006 |
| 3009 | 1713.23 | 1996-10-04 | 2002 |
| 3010 | 1309.95 | 1996-10-06 | 2004 |
| 3011 | 9891.88 | 1996-10-06 | 2006 |
+------+---------+------------+------+
===================================================================================================================================================================================================================
88. Write a query that selects each customer’s smallest order.

--->>select b.cname,min(c.amt) as 'smallest order' from salespeople a, customer b, orders c where a.snum=b.snum and c.cnum=b.cnum group by b.cname ;
=========================================================================================================================================================================================================
89. Write a query that selects the first customer in alphabetical order whose name begins with G.

--->> select cname from customer where cname like 'G%' limit 1;
===============================================================================================================================================================================================================.
90. Write a query that counts the number of different nonNULL city values in the Customers table.

--->>select count(distinct city) from customer;
=============================================================================================================================================================================================================================================
91. Find the average amount from the Orders table.

--->>select avg(amt) from orders;
======================================================================================================================================================================================
92. What would be the output from the following query? SELECT * FROM ORDERS WHERE NOT (odate = 10/03/96 OR snum > 1006) AND amt >= 1500);

--->>Output:
ERROR 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')' at line 1
=======================================================================================================================================================================================
93. Find all customers who are not located in San Jose and whose rating is above 200.

--->>select cname from customer where city<>'San Jose' and rating>200;
========================================================================================================================================================================================
94. Give a simpler way to write this query : SELECT snum, sname city, comm FROM salespeople WHERE (comm > + 0.12 OR comm < 0.14);

--->> SELECT snum, sname city, comm FROM salespeople;
========================================================================================================================================================================================
95. Evaluate the following query : SELECT * FROM orders WHERE NOT ((odate = 10/03/96 AND snum > 1002) OR amt > 2000.00);

--->>SELECT * FROM orders c,salespeople a WHERE NOT ((c.odate = 10/03/96 AND a.snum > 1002) OR c.amt > 2000.00);
Note:snum is not specified properly in the command given in question.
========================================================================================================================================================================================
96. Which salespersons attend to customers not in the city they have been assigned to?

--->>select a.sname from customer b,salespeople a where a.snum=b.snum and a.city<>b.city;
===========================================================================================================================================================================================
97. Which salespeople get commission greater than 0.11 are serving customers rated less than 250? 

--->> select a.sname from customer b,salespeople a where a.snum=b.snum and a.comm>0.11 and b.rating<250 group by a.sname ;
=============================================================================================================================================================================================
98. Which salespeople have been assigned to the same city but get different commission percentages?

--->>select a.sname from customer b,salespeople a where a.snum=b.snum and a.city=b.city group by a.comm;
=================================================================================================================================================================================================
99. Which salesperson has earned the most by way of commission?

--->>select a.sname,sum(a.comm*c.amt) as 'total-comm' from salespeople a,customer b,orders c where a.snum=b.snum and b.cnum=c.cnum group by a.sname order by 'total-comm' desc limit 1;
=================================================================================================================================================================================================
100.Does the customer who has placed the maximum number of orders have the maximum rating? 

--->>select b.cname,count(c.onum),b.rating from salespeople a,customer b,orders c where a.snum=b.snum and b.cnum=c.cnum group by b.cname;
Note:Not all customers with the highest orders have maximum rating.(Only Cisneros does.)
==========================================================================================================================================================
101.Has the customer who has spent the largest amount of money been given the highest rating?

--->>select b.cname,sum(c.amt) as total,b.rating from customer b,salespeople a,orders c where a.snum=b.snum and b.cnum=c.cnum group by b.cname order by total desc;
Note:Customer(Clemens) with the highest amount spent has the least rating of 100.
====================================================================================================================================================================================
102.List all customers in descending order of customer rating.

--->>select cname,rating from customer group by cname order by rating desc;
====================================================================================================================================================================================
103.On which days has Hoffman placed orders? 

--->>select b.cname,c.odate,c.onum from customer b,salespeople a,orders c where a.snum=b.snum and b.cnum=c.cnum and b.cname="Hoffman";
Note:Hoffman placed order only once on 3/10/1996 with onum 3003.
====================================================================================================================================================================================
104.Do all salespeople have different commissions? 

--->>select sname,comm from salespeople;
Note:Yes,all salespeople have different commission.
===================================================================================================================================================================================
***105.Which salespeople have no orders between 10/03/1996 and 10/05/1996?

--->
**select a.sname,c.odate,c.onum from customer b,salespeople a,orders c where a.snum=b.snum and b.cnum=c.cnum;
===================================================================================================================================================================================
106.How many salespersons have succeeded in getting orders?

--->>select count(distinct a.sname) from customer b,salespeople a,orders c where a.snum=b.snum and b.cnum=c.cnum;
Note:5 salespeople have succeeded in getting orders.
===================================================================================================================================================================================
107.How many customers have placed orders? 

--->>select count(distinct b.cname) from salespeople a,customer b,orders c where a.snum=b.snum and b.cnum=c.cnum;
Note:Total of 7 customers placed orders.
==================================================================================================================================================================================
108.On which date has each salesperson booked an order of maximum value?

--->> 
**select a.sname,max(c.amt),c.odate from salespeople a,customer b,orders c where a.snum=b.snum and b.cnum=c.cnum group by a.sname;
Note:wrong date for peel.
===================================================================================================================================================================================
109.Who is the most successful salesperson?

--->select a.sname,sum(c.amt*a.comm) as totalcomm from salespeople a,customer b,orders c where a.snum=b.snum and b.cnum=c.cnum group by a.sname order by totalcomm desc;
Note:peel is the most successful salesperson.
===================================================================================================================================================================================
110.Who is the worst customer with respect to the company?

--->>select b.cname,sum(c.amt) from salespeople a,customer b,orders c where a.snum=b.snum and b.cnum=c.cnum group by b.cname order by sum(c.amt) desc;
Note:hoffman is the worst customer with respect to the company.
==========================================================================================================================================================================
111.Are all customers not having placed orders greater than 200 totally been serviced by salespersons Peel or Serres?

--->>select b.cname,a.sname,c.amt from salespeople a,customer b,orders c where a.snum=b.snum and b.cnum=c.cnum and c.amt<200 and a.sname in ("Peel","Serres");
Note:No customers match the criteria.
==========================================================================================================================================================================
**112.Which customers have the same rating?

--->>
**select a.cname,b.cname from customer a,customer b where a.cname<>b.cname and a.rating=b.rating group by a.cname;
**select a.cname,b.cname from customer a,customer b where a.cname<>b.cname and a.rating=b.rating group by a.rating;
==========================================================================================================================================================================
113.Find all orders greater than the average for October 4th.

--->>select amt,onum from orders where amt>(Select avg(amt) from orders where odate="1996/10/04");
==========================================================================================================================================================================
114.Which customers have above average orders? 

--->>select b.cname,c.amt from salespeople a,customer b,orders c where a.snum=b.snum and b.cnum=c.cnum and c.amt>(Select avg(amt) from orders) group by b.cname;
===============================================================================================================================================================
115.List all customers with ratings above San Jose’s average.

--->>select cname from customer where rating>(Select avg(rating) from customer where city="San Jose");
=====================================================================================================================================================================
116.Select the total amount in orders for each salesperson for whom the total is greater than the amount of the largest order in the table.

--->> select a.sname,sum(c.amt) from salespeople a,customer b,orders c where a.snum=b.snum and b.cnum=c.cnum group by a.sname having sum(c.amt)>(Select max(amt) from orders);
======================================================================================================================================================================
117.Give names and numbers of all salespersons who have more than one customer. 

--->>Select a.sname,a.snum,count(b.cname) as tot_cust from customer b, salespeople a where a.snum=b.snum group by a.sname having tot_cust>1;
=============================================================================================================================================================
118.Select all salespersons by name and number who have customers in their city whom they don’t service. 

--->> Select a.sname,a.snum,b.cname from customer b, salespeople a where a.city=b.city and a.snum<>b.snum group by a.sname;
=============================================================================================================================================================
119.Which customers’ rating should be lowered? 

--->> Select b.cname,sum(c.amt),b.rating from customer b, salespeople a, orders c where  a.snum=b.snum and b.cnum=c.cnum  group by b.cname order by sum(c.amt);
Note:From the result obtained we observe that customers Cisneros,Grass and Giovanni has low total in orders but high rating.Therefore, the ratings of these 3 customers must be lowered.
==============================================================================================================================================================
120.Is there a case for assigning a salesperson to Berlin? 

--->>Select * from salespeople a,customer b where a.snum=b.snum;
Note:Since there is only one customer in Berlin who already has a salesperson there is no case for assigning a salesperson to Berlin.
==============================================================================================================================================================
121.Is there any evidence linking the performance of a salesperson to the commission that he or she is being paid? 

--->>select a.sname,a.comm,c.onum,c.amt from salespeople a,customer b,orders c where a.snum=b.snum and b.cnum=c.cnum;
Note:No,there isn't any evidence linking the performance of a salesperson to the commission that he or she is being paid.
==============================================================================================================================================================
122.Does the total amount in orders by customer in Rome and London exceed the commission paid to salespersons in London and New York by more than 5 times?

--->>
============================================================================================================================================================== 
***123.Which is the date, order number, amt and city for each salesperson (by name) for the maximum order he has obtained?

--->>select a.sname,c.onum,max(c.amt),a.city,b.city from salespeople a,customer b,orders c where a.snum=b.snum and b.cnum=c.cnum group by a.sname; 
==============================================================================================================================================================
124.Which salesperson(s) should be fired?

--->>select a.sname,count(c.onum),sum(c.amt) from orders c,salespeople a,customer b where a.snum=b.snum and b.cnum=c.cnum group by a.sname;
Note:From the above result all salespersons have orders except Fran.Since he got no orders he must be the one fired.
==============================================================================================================================================================
125.What is the total income for the company?

--->>select sum(c.amt-(a.comm*c.amt)) from salespeople a,customer b,orders c where a.snum=b.snum and b.cnum=c.cnum;
==============================================================================================================================================================
